//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlogHost.BlogService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlogService.IBlogAppService")]
    public interface IBlogAppService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/UserLogin", ReplyAction="http://tempuri.org/IBlogAppService/UserLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogAppWcf.UserNotFoundFault), Action="http://tempuri.org/IBlogAppService/UserLoginUserNotFoundFaultFault", Name="UserNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/BlogAppWcf")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogAppWcf.NotCorrectPasswordFault), Action="http://tempuri.org/IBlogAppService/UserLoginNotCorrectPasswordFaultFault", Name="NotCorrectPasswordFault", Namespace="http://schemas.datacontract.org/2004/07/BlogAppWcf")]
        BlogAppWcf.ClientInfo UserLogin(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/UserLogin", ReplyAction="http://tempuri.org/IBlogAppService/UserLoginResponse")]
        System.Threading.Tasks.Task<BlogAppWcf.ClientInfo> UserLoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/UserLogout", ReplyAction="http://tempuri.org/IBlogAppService/UserLogoutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogAppWcf.UserNotFoundFault), Action="http://tempuri.org/IBlogAppService/UserLogoutUserNotFoundFaultFault", Name="UserNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/BlogAppWcf")]
        void UserLogout(BlogAppWcf.ClientInfo client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/UserLogout", ReplyAction="http://tempuri.org/IBlogAppService/UserLogoutResponse")]
        System.Threading.Tasks.Task UserLogoutAsync(BlogAppWcf.ClientInfo client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/AddPost", ReplyAction="http://tempuri.org/IBlogAppService/AddPostResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogAppWcf.UserNotFoundFault), Action="http://tempuri.org/IBlogAppService/AddPostUserNotFoundFaultFault", Name="UserNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/BlogAppWcf")]
        void AddPost(string body, BlogAppWcf.ClientInfo client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/AddPost", ReplyAction="http://tempuri.org/IBlogAppService/AddPostResponse")]
        System.Threading.Tasks.Task AddPostAsync(string body, BlogAppWcf.ClientInfo client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/ModifyPost", ReplyAction="http://tempuri.org/IBlogAppService/ModifyPostResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogAppWcf.PostNotFoundFault), Action="http://tempuri.org/IBlogAppService/ModifyPostPostNotFoundFaultFault", Name="PostNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/BlogAppWcf")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogAppWcf.UserNotFoundFault), Action="http://tempuri.org/IBlogAppService/ModifyPostUserNotFoundFaultFault", Name="UserNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/BlogAppWcf")]
        void ModifyPost(int id, string body, BlogAppWcf.ClientInfo client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/ModifyPost", ReplyAction="http://tempuri.org/IBlogAppService/ModifyPostResponse")]
        System.Threading.Tasks.Task ModifyPostAsync(int id, string body, BlogAppWcf.ClientInfo client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/DeletePost", ReplyAction="http://tempuri.org/IBlogAppService/DeletePostResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogAppWcf.PostNotFoundFault), Action="http://tempuri.org/IBlogAppService/DeletePostPostNotFoundFaultFault", Name="PostNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/BlogAppWcf")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogAppWcf.UserNotFoundFault), Action="http://tempuri.org/IBlogAppService/DeletePostUserNotFoundFaultFault", Name="UserNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/BlogAppWcf")]
        void DeletePost(int id, BlogAppWcf.ClientInfo client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/DeletePost", ReplyAction="http://tempuri.org/IBlogAppService/DeletePostResponse")]
        System.Threading.Tasks.Task DeletePostAsync(int id, BlogAppWcf.ClientInfo client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/RegisterUser", ReplyAction="http://tempuri.org/IBlogAppService/RegisterUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogAppWcf.UserAlreadyExistsFault), Action="http://tempuri.org/IBlogAppService/RegisterUserUserAlreadyExistsFaultFault", Name="UserAlreadyExistsFault", Namespace="http://schemas.datacontract.org/2004/07/BlogAppWcf")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogAppWcf.PasswordsNotEqualFault), Action="http://tempuri.org/IBlogAppService/RegisterUserPasswordsNotEqualFaultFault", Name="PasswordsNotEqualFault", Namespace="http://schemas.datacontract.org/2004/07/BlogAppWcf")]
        void RegisterUser(string username, string password, string RetryPassword, string FirstName, string LastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/RegisterUser", ReplyAction="http://tempuri.org/IBlogAppService/RegisterUserResponse")]
        System.Threading.Tasks.Task RegisterUserAsync(string username, string password, string RetryPassword, string FirstName, string LastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/GetAllPosts", ReplyAction="http://tempuri.org/IBlogAppService/GetAllPostsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogAppWcf.UserNotFoundFault), Action="http://tempuri.org/IBlogAppService/GetAllPostsUserNotFoundFaultFault", Name="UserNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/BlogAppWcf")]
        BlogAppWcf.PostModel[] GetAllPosts(BlogAppWcf.ClientInfo client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/GetAllPosts", ReplyAction="http://tempuri.org/IBlogAppService/GetAllPostsResponse")]
        System.Threading.Tasks.Task<BlogAppWcf.PostModel[]> GetAllPostsAsync(BlogAppWcf.ClientInfo client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/GetUserPosts", ReplyAction="http://tempuri.org/IBlogAppService/GetUserPostsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogAppWcf.UserNotFoundFault), Action="http://tempuri.org/IBlogAppService/GetUserPostsUserNotFoundFaultFault", Name="UserNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/BlogAppWcf")]
        BlogAppWcf.PostModel[] GetUserPosts(BlogAppWcf.ClientInfo client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/GetUserPosts", ReplyAction="http://tempuri.org/IBlogAppService/GetUserPostsResponse")]
        System.Threading.Tasks.Task<BlogAppWcf.PostModel[]> GetUserPostsAsync(BlogAppWcf.ClientInfo client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/GetPostBody", ReplyAction="http://tempuri.org/IBlogAppService/GetPostBodyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogAppWcf.PostNotFoundFault), Action="http://tempuri.org/IBlogAppService/GetPostBodyPostNotFoundFaultFault", Name="PostNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/BlogAppWcf")]
        [System.ServiceModel.FaultContractAttribute(typeof(BlogAppWcf.UserNotFoundFault), Action="http://tempuri.org/IBlogAppService/GetPostBodyUserNotFoundFaultFault", Name="UserNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/BlogAppWcf")]
        string GetPostBody(int id, BlogAppWcf.ClientInfo client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogAppService/GetPostBody", ReplyAction="http://tempuri.org/IBlogAppService/GetPostBodyResponse")]
        System.Threading.Tasks.Task<string> GetPostBodyAsync(int id, BlogAppWcf.ClientInfo client);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBlogAppServiceChannel : BlogHost.BlogService.IBlogAppService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlogAppServiceClient : System.ServiceModel.ClientBase<BlogHost.BlogService.IBlogAppService>, BlogHost.BlogService.IBlogAppService {
        
        public BlogAppServiceClient() {
        }
        
        public BlogAppServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BlogAppServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogAppServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogAppServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BlogAppWcf.ClientInfo UserLogin(string username, string password) {
            return base.Channel.UserLogin(username, password);
        }
        
        public System.Threading.Tasks.Task<BlogAppWcf.ClientInfo> UserLoginAsync(string username, string password) {
            return base.Channel.UserLoginAsync(username, password);
        }
        
        public void UserLogout(BlogAppWcf.ClientInfo client) {
            base.Channel.UserLogout(client);
        }
        
        public System.Threading.Tasks.Task UserLogoutAsync(BlogAppWcf.ClientInfo client) {
            return base.Channel.UserLogoutAsync(client);
        }
        
        public void AddPost(string body, BlogAppWcf.ClientInfo client) {
            base.Channel.AddPost(body, client);
        }
        
        public System.Threading.Tasks.Task AddPostAsync(string body, BlogAppWcf.ClientInfo client) {
            return base.Channel.AddPostAsync(body, client);
        }
        
        public void ModifyPost(int id, string body, BlogAppWcf.ClientInfo client) {
            base.Channel.ModifyPost(id, body, client);
        }
        
        public System.Threading.Tasks.Task ModifyPostAsync(int id, string body, BlogAppWcf.ClientInfo client) {
            return base.Channel.ModifyPostAsync(id, body, client);
        }
        
        public void DeletePost(int id, BlogAppWcf.ClientInfo client) {
            base.Channel.DeletePost(id, client);
        }
        
        public System.Threading.Tasks.Task DeletePostAsync(int id, BlogAppWcf.ClientInfo client) {
            return base.Channel.DeletePostAsync(id, client);
        }
        
        public void RegisterUser(string username, string password, string RetryPassword, string FirstName, string LastName) {
            base.Channel.RegisterUser(username, password, RetryPassword, FirstName, LastName);
        }
        
        public System.Threading.Tasks.Task RegisterUserAsync(string username, string password, string RetryPassword, string FirstName, string LastName) {
            return base.Channel.RegisterUserAsync(username, password, RetryPassword, FirstName, LastName);
        }
        
        public BlogAppWcf.PostModel[] GetAllPosts(BlogAppWcf.ClientInfo client) {
            return base.Channel.GetAllPosts(client);
        }
        
        public System.Threading.Tasks.Task<BlogAppWcf.PostModel[]> GetAllPostsAsync(BlogAppWcf.ClientInfo client) {
            return base.Channel.GetAllPostsAsync(client);
        }
        
        public BlogAppWcf.PostModel[] GetUserPosts(BlogAppWcf.ClientInfo client) {
            return base.Channel.GetUserPosts(client);
        }
        
        public System.Threading.Tasks.Task<BlogAppWcf.PostModel[]> GetUserPostsAsync(BlogAppWcf.ClientInfo client) {
            return base.Channel.GetUserPostsAsync(client);
        }
        
        public string GetPostBody(int id, BlogAppWcf.ClientInfo client) {
            return base.Channel.GetPostBody(id, client);
        }
        
        public System.Threading.Tasks.Task<string> GetPostBodyAsync(int id, BlogAppWcf.ClientInfo client) {
            return base.Channel.GetPostBodyAsync(id, client);
        }
    }
}
